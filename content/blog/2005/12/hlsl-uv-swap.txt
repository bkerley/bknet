--- 
slug: hlsl-uv-swap
updated_at: 2008-03-02 17:49:10 -05:00
title: "HLSL: UV swap"
tags: hlsl programming shader picture
id: 48
excerpt: 
filter: 
- markdown
blog_post: true
layout: post
created_at: 2005-12-21 12:54:00 -05:00
--- 
<a href="/textpattern/images/42.jpg"><img src="/textpattern/images/42t.jpg" alt="Inverted brightness from Corner Gas" /></a>
<p>This shader swaps the U and V channels in the YUV color space with a single matrix multiplication.  The constants in the matrix are calculated based on <a href="http://en.wikipedia.org/wiki/YUV">wikipedia's RGB -> YUV matrix</a>, the corresponding YUV -> RGB matrix, and the simple reversing matrix R obtained by:</p>
<ol>
<li>Take the 4x4 identity matrix I
<li>Swap the second and third rows (corresponding to U and V).
</ol>
<p>Multiply the three matrices RGB->YUV, R, and YUV->RGB.  Get a computer to do it because the math is boring.</p>
<pre>sampler s0 : register(s0);

float4 main(float2 tex : TEXCOORD0) : COLOR
{
	float4x4 matUVshiftRGB = {
-0.00029999999999998084, 0.00013179999999999513, 1.0041311, 0,
-0.0010000000000000286, 1.004206, 0.00014329999999999492, 0,
1, -.00002499999999975368, 0.00002220000000001008, 0,
0, 0, 0, 0};
	// matrix math!
	return mul(tex2D( s0, tex), matUVshiftRGB);
}</pre>
<p>This shader was made to use with <a href="http://sourceforge.net/projects/guliverkli/">Media Player Classic</a>.</p>
